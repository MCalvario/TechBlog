const router = require('express').Router();
const { User, Post, Comment } = require('../../models');
const withAuth = require('../../utils/auth');

router.get('/', (req, res) => {
    User.findAll({
        attributes: { exclude: ['password'] }
    })
      .then(users => res.json(users))
      .catch(err => {
        console.log(err);
        res.status(500).json(err);
      });
  });

router.get('/:id', (req, res) => {
    User.findOne({
        attributes: { exclude: ['password']},
        where: {
          id: req.params.id
        },
        include: [
            {
              model: Post,
              attributes: [
                'id', 
                'title', 
                'post_content', 
                'created_at']

            },
            {
                model: Comment,
                attributes: [
                  'id', 
                  'comment_text', 
                  'created_at'],

                include: {
                  model: Post,
                  attributes: [
                    'title'
                  ]
                }
            }
          ]

    })
      .then(users => {
        if (!users) {
          res.status(404).json({ message: 'Unable to locate user with this id' });
          return;
        }
        res.json(users);
      })
      .catch(err => {
        console.log(err);
        res.status(500).json(err);
      });
  });

router.post('/', (req, res) => {
    User.create({
      username: req.body.username,
      email: req.body.email,
      password: req.body.password,
    })
    .then(users => {
      req.session.save(() => {
        req.session.user_id = users.id;
        req.session.username = users.username;
        req.session.email = users.email;
        req.session.loggedIn = true;
    
        res.json(users);
      });
    });
  });

  
  router.post('/login', (req, res) => {
    User.findOne({
      where: {
        email: req.body.email
      }
    }).then(users => {
      if (!users) {
        res.status(400).json({ message: 'Unable to locate user with this email address!' });
        return;
      }
  
      const validPassword = users.checkPassword(req.body.password);
  
      if (!validPassword) {
        res.status(400).json({ message: 'Oops! Something went wrong.' });
        return;
      }
  
      req.session.save(() => {
        req.session.user_id = users.id;
        req.session.username = users.username;
        req.session.email = users.email;
        req.session.loggedIn = true;
  
        res.json({ user: users, message: 'You are now logged in.  Welcome!' });
      });
    });
  });


  router.post('/logOut', (req, res) => {
    if (req.session.loggedIn) {
      req.session.destroy(() => {
        res.status(204).end();
      });
    }
    else {
      res.status(404).end();
    }
  });

router.put('/:id', withAuth, (req, res) => {
    User.update(req.body, {
        individualHooks: true,
        where: {
            id: req.params.id
      }
    })
      .then(users => {
        if (!users[0]) {
          res.status(404).json({ message: 'Unable to locate user with this id' });
          return;
        }
        res.json(users);
      })
      .catch(err => {
        console.log(err);
        res.status(500).json(err);
      });
  });

router.delete('/:id', withAuth, (req, res) => {
    User.destroy({
      where: {
        id: req.params.id
      }
    })
      .then(users => {
        if (!users) {
          res.status(404).json({ message: 'Unable to locate user with this id' });
          return;
        }
        res.json(users);
      })
      .catch(err => {
        console.log(err);
        res.status(500).json(err);
      });
  });

module.exports = router;